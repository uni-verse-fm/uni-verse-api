version: '3.9'
services:
  dev:
    container_name: uni_verse_api_dev
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    command: npm run start:dev
    ports:
      - 3000:3000
      - 3001:9229
    depends_on:
      - mongodb
      - minio
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - log-data:/usr/src/app/logs
    restart: unless-stopped
    env_file:
      - docker.env

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - mongodb-data:/data/db
    ports:
      - 27017:27017
    env_file:
      - docker.env

  mongo-express:
    image: mongo-express
    container_name: server-mongo-express
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    restart: always
    env_file:
      - docker.env

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    command: minio server --console-address ":9001" /data
    restart: always
    env_file:
      - docker.env

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq
        - rabbitmq-log:/var/log/rabbitmq

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - '9090:9090'

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: monitoring_grafana
  #   restart: unless-stopped
  #   links:
  #     - prometheus:prometheus
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   ports:
  #     - '3009:3000'
  #   depends_on:
  #     - prometheus
  #   env_file:
  #     - docker.env

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    container_name: elasticsearch
    privileged: true
    environment:
      - discovery.type=single-node
      - node.name=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    depends_on:
      - dev
    env_file:
      - docker.env
  # kibana:
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:8.2.0
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   env_file:
  #     - docker.env

  # filebeat:
  #   user: root
  #   container_name: filebeat
  #   image: docker.elastic.co/beats/filebeat:8.2.0
  #   volumes:
  #     - log-data:/usr/share/filebeat/logs
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
  #   depends_on:
  #     - elasticsearch
  #   env_file:
  #     - docker.env

  search-worker:
    container_name: uni_verse_search_worker
    image: registry.qtmsheep.com/vagahbond/uni-verse/worker:latest
    volumes:
      - ../uni-verse-worker:/usr/src/app
      - olaf-data:/root/.olaf/db
    restart: unless-stopped
    environment:
      - TASK=search
    env_file:
      - docker.env

  register-worker:
    container_name: uni_verse_register_worker
    image: registry.qtmsheep.com/vagahbond/uni-verse/worker:latest
    volumes:
      - ../uni-verse-worker:/usr/src/app
      - olaf-data:/root/.olaf/db

    restart: unless-stopped
    environment:
      - TASK=register
    env_file:
      - docker.env

volumes:
  mongodb-data:
  minio-data:
  grafana-storage:
  log-data:
  elasticsearch-data:
  rabbitmq-data:
  rabbitmq-log:
  olaf-data: